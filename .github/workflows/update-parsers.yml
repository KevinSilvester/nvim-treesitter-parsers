name: update parsers

on:
  schedule:
    - cron: "0 23 * * *"
  push:
    branches:
      - master

env:
  CHANGELOG_LIMIT: 200
  TS_PARSERS_COMMIT: ccf81ff92570b9433b3ea53c58054fd4619f164c
  TS_PARSERS_QUIET: true

jobs:
  update-parsers:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for changes
        id: parsers
        shell: bash
        run: |
          # install nvim-treesitter
          git clone --depth=1 'https://github.com/nvim-treesitter/nvim-treesitter'
          echo "RELEASE_TAG=v$(date -u +'%Y-%m-%d')-$(git --git-dir ./nvim-treesitter/.git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

          # install neovim
          wget -nv 'https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz'
          tar -xzf nvim-linux64.tar.gz
          rm nvim-linux64.tar.gz

          # update parsers.json
          ./nvim-linux64/bin/nvim --headless -u ./init.lua -c 'q'
          cat parsers.min.json | jq -M -S --indent 3 . > parsers.json

          # check if parsers have changed
          ([[ -f ./changes.json ]] && echo "CHANGED=true" || echo "CHANGED=false") >> $GITHUB_OUTPUT

      - name: Install Rust
        if: steps.parsers.outputs.CHANGED == 'true'
        uses: dtolnay/rust-toolchain@stable

      - name: Insall ts-parsers (cargo)
        if: steps.parsers.outputs.CHANGED == 'true'
        uses: baptiste0928/cargo-install@v3
        with:
          crate: ts-parsers
          git: https://github.com/KevinSilvester/ts-parsers
          commit: ${{ env.TS_PARSERS_COMMIT }}
          
      - name: Install tree-sitter-cli (cargo)
        if: steps.parsers.outputs.CHANGED == 'true'
        uses: baptiste0928/cargo-install@v3
        with:
          crate: tree-sitter-cli
          
      - name: Install Zig
        if: steps.parsers.outputs.CHANGED == 'true'
        shell: bash
        run: |
          wget -nv 'https://ziglang.org/download/0.13.0/zig-linux-x86_64-0.13.0.tar.xz' -O /tmp/zig.tar.xz
          tar -xf /tmp/zig.tar.xz -C /tmp
          mkdir -p $HOME/zig
          mv /tmp/zig-linux-x86_64-0.13.0/* $HOME/zig
          echo "$HOME/zig" >> $GITHUB_PATH
          
      - name: Install pnpm
        if: steps.parsers.outputs.CHANGED == 'true'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        if: steps.parsers.outputs.CHANGED == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Update CHANGELOG.json
        if: steps.parsers.outputs.CHANGED == 'true'
        shell: bash
        run: |
          # Insert a new entry into the CHANGELOG
          # Trim the oldest entry out if the CHANGELOG_LIMIT is reached
          cat ./CHANGELOG.json | jq -M --indent 3 "if length == $CHANGELOG_LIMIT then .[:-1] else . end | [{
            tag: \"${{ steps.parsers.outputs.RELEASE_TAG }}\",
            url: \"https://raw.githubusercontent.com/KevinSilvester/nvim-treesitter-parsers/${{ steps.parsers.outputs.RELEASE_TAG }}/parsers.min.json\",
            date: \"$(date -u +"%F %T %Z")\",
            changes: $(jq -M -S < ./changes.json)
          }] + ." > ./CHANGELOG.tmp.json

          rm CHANGELOG.json changes.json
          mv CHANGELOG.tmp.json CHANGELOG.json
          cat CHANGELOG.json | jq -c -M . > ./CHANGELOG.min.json

      - name: Commit changes
        if: steps.parsers.outputs.CHANGED == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          tagging_message: "${{ steps.parsers.outputs.RELEASE_TAG }}"
          commit_message: "[CI: UPDATE PARSERS]"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"

      - name: Compile and Archive Parsers
        if: steps.parsers.outputs.CHANGED == 'true'
        shell: bash
        run: |
          sleep 5
          bash scripts/release.sh

      - name: Create Release Body
        if: steps.parsers.outputs.CHANGED == 'true'
        shell: bash
        run: |
          current_tag=$(jq -r '.[0].tag' CHANGELOG.json)
          previous_tag=$(jq -r '.[1].tag' CHANGELOG.json)

          added_parsers=($(jq -r '.[0].changes.added[]' CHANGELOG.json))
          updated_parsers=($(jq -r '.[0].changes.updated[]' CHANGELOG.json))
          removed_parsers=($(jq -r '.[0].changes.removed[]' CHANGELOG.json))

          touch release_body.md

          echo "## Changes" >> release_body.md

          echo "" >> release_body.md

          echo "### Added" >> release_body.md
          for i in "${added_parsers[@]}"; do
            echo " - \`$i\`" >> release_body.md
          done

          echo "" >> release_body.md

          echo "### Updated" >> release_body.md
          for i in "${updated_parsers[@]}"; do
            echo " - \`$i\`" >> release_body.md
          done

          echo "" >> release_body.md

          echo "### Removed" >> release_body.md
          for i in "${removed_parsers[@]}"; do
            echo " - \`$i\`" >> release_body.md
          done

          echo "" >> release_body.md
          echo "---" >> release_body.md
          echo "" >> release_body.md

          echo "**View Changes**: https://github.com/KevinSilvester/nvim-treesitter-parsers/compare/$previous_tag...$current_tag" >> release_body.md

      - name: Upload Release Assets
        if: steps.parsers.outputs.CHANGED == 'true'
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          name: ${{ steps.parsers.outputs.RELEASE_TAG }}
          tag_name: ${{ steps.parsers.outputs.RELEASE_TAG }}
          body_path: release_body.md
          files: |
            parsers-${{ steps.parsers.outputs.RELEASE_TAG }}-aarch64-linux.tar.bz2
            parsers-${{ steps.parsers.outputs.RELEASE_TAG }}-x86_64-linux.tar.bz2
            parsers-${{ steps.parsers.outputs.RELEASE_TAG }}-aarch64-macos.tar.bz2
            parsers-${{ steps.parsers.outputs.RELEASE_TAG }}-x86_64-macos.tar.bz2
            parsers-${{ steps.parsers.outputs.RELEASE_TAG }}-x86_64-windows.tar.bz2
            parsers-${{ steps.parsers.outputs.RELEASE_TAG }}-aarch64-linux.tar.bz2.sha256sum
            parsers-${{ steps.parsers.outputs.RELEASE_TAG }}-x86_64-linux.tar.bz2.sha256sum
            parsers-${{ steps.parsers.outputs.RELEASE_TAG }}-aarch64-macos.tar.bz2.sha256sum
            parsers-${{ steps.parsers.outputs.RELEASE_TAG }}-x86_64-macos.tar.bz2.sha256sum
            parsers-${{ steps.parsers.outputs.RELEASE_TAG }}-x86_64-windows.tar.bz2.sha256sum
